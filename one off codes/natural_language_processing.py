# -*- coding: utf-8 -*-
"""natural language processing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J103larWyk1-ftpAnyYhd1GnHpTRkKAD
"""

import nltk

nltk.download()

user= input("enter your sentence:")

user

from nltk.tokenize import word_tokenize,sent_tokenize

tokenized_sentence = sent_tokenize(user)

tokenized_words = word_tokenize(user)

from nltk.corpus import stopwords

list_of_stopwords = stopwords.words('english')

clean_words = []
for each_word in tokenized_words:
  if not each_word.lower() in list_of_stopwords:
    clean_words.append(each_word)

len(tokenized_words),len(clean_words)

from nltk.stem import PorterStemmer

ps = PorterStemmer()

ps.stem('Writing')

ps.stem('Valorant')

for eachword in tokenized_words:
  print(eachword,":",ps.stem(eachword))

from nltk import pos_tag

pos_tag(tokenized_words)

import pandas as pd

df = pd.read_csv('/content/Tweets.csv')

df

df.columns

df = df[['airline_sentiment','airline_sentiment_confidence','text']]

df

df = df[df['airline_sentiment_confidence'] > 0.8]

df



clean_tweet_list=[]
airlines = ['virginamerica','jetblue','united','americanair','usairways']
specialchr = ['!','@','#','$','%','^','&','*']
for i in range(df.shape[0]):
  current_tweet = df['text'].values[i]
  list_of_words = word_tokenize(current_tweet)
  clean_tweet = ''
  for each_word in list_of_words:
    if not each_word.lower() in list_of_stopwords:
      if not each_word.lower() in airlines:
        if not each_word.lower() in specialchr:
          clean_tweet = clean_tweet + ' ' + each_word
  clean_tweet_list.append(clean_tweet)

clean_tweet_list

df['clean_tweets'] = clean_tweet_list

df

import sklearn

from sklearn.feature_extraction.text import CountVectorizer

cv = CountVectorizer()

cv.fit(df['clean_tweets'])

sparse_matrix = cv.transform(df['clean_tweets'])

sparse_matrix

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

df['airline_sentiment'] = le.fit_transform(df['airline_sentiment'])

df

from sklearn.model_selection import train_test_split

xtrain,xtest,ytrain,ytest = train_test_split(sparse_matrix,df['airline_sentiment'])

from sklearn.naive_bayes import MultinomialNB

nv = MultinomialNB()

nv.fit(xtrain,ytrain)

from sklearn.metrics import accuracy_score

ypred = nv.predict(xtest)

accuracy_score(ytest,ypred)

user = "i love you"

input = cv.transform([user])

nv.predict(input)

